token          |     lexeme

keyword        |     function
identifier     |     convert
separator      |     (
identifier     |     fahr
keyword        |     integer
separator      |     )
separator      |     {
keyword        |     return
integer        |     5
operator       |     *
separator      |     (
identifier     |     fahr
operator       |     -
integer        |     32
separator      |     )
operator       |     /
integer        |     9
separator      |     ;
integer        |     5
operator       |     ==
integer        |     5
separator      |     ;
integer        |     5
operator       |     <=
integer        |     6
separator      |     ;
real           |     123.123
separator      |     }
keyword        |     if
identifier     |     IF
separator      |     #
keyword        |     integer
identifier     |     low
separator      |     ,
identifier     |     high
separator      |     ,
identifier     |     step
separator      |     ;
keyword        |     get
separator      |     (
identifier     |     low
separator      |     ,
identifier     |     high
separator      |     ,
identifier     |     step
separator      |     )
separator      |     ;
keyword        |     while
separator      |     (
identifier     |     low
operator       |     <=
identifier     |     high
separator      |     )
separator      |     {
keyword        |     put
separator      |     (
identifier     |     low
separator      |     )
separator      |     ;
keyword        |     put
separator      |     (
identifier     |     convert
separator      |     (
identifier     |     low
separator      |     )
separator      |     )
separator      |     ;
identifier     |     low
operator       |     =
identifier     |     low
operator       |     +
identifier     |     step
separator      |     ;
separator      |     }
separator      |     #
