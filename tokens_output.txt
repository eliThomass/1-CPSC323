token          |     lexeme

keyword        |     function
identifier     |     calculate
separator      |     (
identifier     |     x
keyword        |     integer
separator      |     ,
identifier     |     y
keyword        |     real
separator      |     )
separator      |     {
keyword        |     if
separator      |     (
identifier     |     x
operator       |     >
integer        |     0
separator      |     )
keyword        |     return
identifier     |     x
operator       |     *
identifier     |     y
separator      |     ;
keyword        |     else
keyword        |     return
real           |     0.0
separator      |     ;
keyword        |     fi
separator      |     }
keyword        |     if
identifier     |     IF
separator      |     #
keyword        |     integer
identifier     |     num1
separator      |     ,
identifier     |     num2
separator      |     ,
identifier     |     result
separator      |     ;
keyword        |     real
identifier     |     value1
separator      |     ,
identifier     |     value2
separator      |     ;
keyword        |     boolean
identifier     |     isValid
separator      |     ;
keyword        |     get
separator      |     (
identifier     |     num1
separator      |     ,
identifier     |     num2
separator      |     )
separator      |     ;
keyword        |     get
separator      |     (
identifier     |     value1
separator      |     ,
identifier     |     value2
separator      |     )
separator      |     ;
identifier     |     isValid
operator       |     =
keyword        |     true
separator      |     ;
keyword        |     while
separator      |     (
identifier     |     num1
operator       |     <=
identifier     |     num2
separator      |     )
separator      |     {
identifier     |     result
operator       |     =
identifier     |     calculate
separator      |     (
identifier     |     num1
separator      |     ,
identifier     |     value1
separator      |     )
separator      |     ;
keyword        |     put
separator      |     (
identifier     |     result
separator      |     )
separator      |     ;
identifier     |     num1
operator       |     =
identifier     |     num1
operator       |     +
integer        |     1
separator      |     ;
separator      |     }
separator      |     #
